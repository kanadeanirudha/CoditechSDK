@model GeneralPersonFollowUpViewModel
@{
    ViewBag.Title = Model.GeneralPersonFollowUpId > 0 ? "Update PersonFollowUp" : "Add Lead Generation";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
}

<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.GeneralPersonFollowUpId > 0)
                                {
                                    <h4 class="card-title">Update Lead Generation</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Lead Generation</h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.GeneralPersonFollowUpId)

                            <div class="row">
                                                          
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FollowTakenId, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.FollowTakenId, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FollowTakenId)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FollowTakenFor, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.FollowTakenFor, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FollowTakenFor)
                                    </div>
                                </div>                                
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                    @Html.LabelFor(x => x.FollowupTypesEnumId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                               DropdownSelectedValue = Model.FollowupTypesEnumId.ToString(),
                               DropdownName = "FollowupTypesEnumId",
                                   GroupCode = DropdownTypeEnum.GeneralFollowupTypes.ToString()
                           })   @Html.ValidationMessageFor(x => x.FollowupTypesEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FollowupComment, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.FollowupComment, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FollowupComment)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ReminderDate, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.ReminderDate, AdminGeneralHelper.DateFormatForTextBox(), new { @class = "form-control", @id = "ReminderDate" })
                                        @Html.ValidationMessageFor(x => x.ReminderDate, null, new { id = "errorReminderDate" })
                                    </div>
                                </div>

                                @if (Model.GeneralPersonFollowUpId > 0 && !Model.IsSetReminder)
                                {
                                    <div class="col-lg-3">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.IsSetReminder, new { @class = "form-label" })
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.IsSetReminder, new { @class = "form-check-input" })
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_ValidationScriptsPartial")
<script src="~/js/layout/daterangepicker.js"></script>
@section scripts {
    <script type="text/javascript">
        $(function () {
            var currentYear = new Date().getFullYear();
            $("#ReminderDate").datepicker({
                changeMonth: true,
                changeYear: true,
                format: "@AdminGeneralHelper.DateFormatForCalendar()",
                language: "en",
                autoSize: true,
                yearRange: currentYear + ':' + (currentYear + 10)
            });
        });
    </script>
}
