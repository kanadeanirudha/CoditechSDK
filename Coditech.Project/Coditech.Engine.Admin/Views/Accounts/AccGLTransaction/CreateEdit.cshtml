@model AccGLTransactionViewModel
@{
    ViewBag.Title = Model.AccGLTransactionId > 0 ? "Update Transaction" : "Add Transaction";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();

    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "SelectedCentreCode", DropdownSelectedValue = Model.CentreCode, ChangeEvent = "CoditechCommon.LoadListByCentreCode('" + @controllerName + "','" + @actionName + "')" };
    DropdownViewModel financialYearDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.FinancialYear.ToString(), DropdownName = "financialYearDropdown", DropdownSelectedValue = Model.GeneralFinancialYearId.ToString(), Parameter = Model.GeneralFinancialYearId.ToString(), ChangeEvent = "CoditechCommon.LoadListByCentreCodeAndDepartmentId('" + @controllerName + "','" + @actionName + "')" };
    DropdownViewModel accSetupTransactionType = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccSetupTransactionType.ToString(), DropdownName = "accSetupTransactionType", DropdownSelectedValue = Model.AccSetupTransactionTypeId.ToString(), ChangeEvent = "CoditechCommon.LoadListByBalanceSheet('" + @controllerName + "','" + @actionName + "')" };
    // DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "CentreCode", DropdownSelectedValue = Model.CentreCode };
    DropdownViewModel accSetupBalanceSheetTypeDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccSetupBalanceSheetType.ToString(), DropdownName = "AccSetupBalanceSheetTypeId", DropdownSelectedValue = Model.AccSetupBalanceSheetTypeId.ToString(), ChangeEvent = "CoditechCommon.LoadListByCentreCodeAndDepartmentId('" + @controllerName + "','" + @actionName + "')" };
    DropdownViewModel accSetupBalanceSheetDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccSetupBalanceSheet.ToString(), DropdownName = "AccSetupBalanceSheetId", DropdownSelectedValue = Model.AccSetupBalanceSheetId.ToString() };
}

<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.AccGLTransactionId > 0)
                                {
                                    <h4 class="card-title">Update Transaction</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Transaction</h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.AccSetupBalanceSheetId)
                            @Html.HiddenFor(m => m.GeneralFinancialYearId)
                            @Html.HiddenFor(m => m.AccSetupTransactionTypeId)
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.CentreCode, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                                        @Html.ValidationMessageFor(x => x.CentreCode)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AccSetupBalanceSheetTypeId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", accSetupBalanceSheetTypeDropdown)
                                        @Html.ValidationMessageFor(x => x.AccSetupBalanceSheetTypeId)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AccSetupBalanceSheetId, new { @class = "form-label required"})
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml",  accSetupBalanceSheetDropdown) 
                                        @Html.ValidationMessageFor(x => x.AccSetupBalanceSheetId)
                                    </div>
                                </div>
                                 <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.GeneralFinancialYearId, new { @class = "form-label required"})
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", financialYearDropdown)
                                        @Html.ValidationMessageFor(x => x.GeneralFinancialYearId)
                                    </div>
                                </div>
                                 <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AccSetupTransactionTypeId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", accSetupTransactionType)
                                        @Html.ValidationMessageFor(x => x.AccSetupTransactionTypeId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.TransactionDate, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.TransactionDate, AdminGeneralHelper.DateFormatForTextBox(), new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(x => x.TransactionDate)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.NarrationDescription, new { @class = "form-label " })
                                        @Html.TextAreaFor(x => x.NarrationDescription, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.NarrationDescription)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.VoucherNumber , new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.VoucherNumber, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidNumeric()" })
                                        @Html.ValidationMessageFor(x => x.VoucherNumber)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.TransactionEnum, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.TransactionEnum, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidNumeric()" })
                                        @Html.ValidationMessageFor(x => x.TransactionEnum)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.TransactionRefId, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.TransactionRefId, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidNumeric()" })
                                        @Html.ValidationMessageFor(x => x.TransactionRefId)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ModeCode, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.ModeCode, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidNumeric()" })
                                        @Html.ValidationMessageFor(x => x.ModeCode)
                                    </div>
                                </div>
                                @* <div class="Idcol-lg-6"> *@
                                @*     <div class="mb-3"> *@
                                @*         @Html.LabelFor(x => x., new { @class = "form-label required" }) *@
                                @*         @Html.TextBoxFor(x => x.AccBalancesheetCode, new { @class = "form-control", onkeypress = "return CoditechCommon.AvoidSpacing()" }) *@
                                @*         @Html.ValidationMessageFor(x => x.AccBalancesheetCode) *@
                                @*     </div> *@
                                @* </div> *@
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsActive, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/Cancel?SelectedParameter1=@Model.AccSetupBalanceSheetId" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
