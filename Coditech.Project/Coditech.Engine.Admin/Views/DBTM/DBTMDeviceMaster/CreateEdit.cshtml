@model DBTMDeviceViewModel
@{
    ViewBag.Title = Model.DBTMDeviceMasterId > 0 ? "Update DBTM Device" : "Add DBTM Device";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.DBTMDeviceMasterId > 0)
                                {
                                    <h4 class="card-title">Update DBTM Device</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Add DBTM Device</h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.DBTMDeviceMasterId)
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.DeviceName, new { @class = "form-label required"})
                                        @Html.TextBoxFor(x => x.DeviceName, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.DeviceName)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.DeviceSerialCode, new { @class = "form-label required"})
                                        @if (Model.DBTMDeviceMasterId > 0)
                                        {
                                            @Html.TextBoxFor(x => x.DeviceSerialCode, new { @class = "form-control", @readonly = "readonly"})
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.DeviceSerialCode, new { @class = "form-control", @onkeypress = "return CoditechCommon.AvoidSpacing()" })
                                        }
                                        @Html.ValidationMessageFor(x => x.DeviceSerialCode)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ManufacturedBy, new { @class = "form-label"})
                                        @Html.TextBoxFor(x => x.ManufacturedBy, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.ManufacturedBy)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.DBTMDeviceStatus, new { @class = "form-label required"})
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.StatusEnumId.ToString(),
                                   DropdownName = "StatusEnumId",
                                   GroupCode = DropdownCustomTypeEnum.DBTMDeviceStatus.ToString()
                               })
                                        @Html.ValidationMessageFor(x => x.StatusEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.RegistrationDate, new { @class = "form-label required"})
                                        @Html.TextBoxFor(x => x.RegistrationDate, AdminGeneralHelper.DateFormatForTextBox(), new { @class = "form-control", @readonly = "true" })
                                        @Html.ValidationMessageFor(x => x.RegistrationDate)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.WarrantyExpirationPeriodInMonth, new { @class = "form-label required"})
                                        @Html.TextBoxFor(x => x.WarrantyExpirationPeriodInMonth, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.WarrantyExpirationPeriodInMonth)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AdditionalFeatures, new { @class = "form-label"})
                                        @Html.TextBoxFor(x => x.AdditionalFeatures, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.AdditionalFeatures)
                                    </div>
                                </div>
                                <div class="col-lg-8">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Description, new { @class = "form-label"})
                                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.Description)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsMasterDevice, new { @class = "form-label"})
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsMasterDevice, new { @class = "form-check-input"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsActive, new { @class = "form-label"})
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/layout/daterangepicker.js"></script>

@section scripts {
    <script type="text/javascript">
        $(function () {
            var today = new Date();
            var twoYearsAgo = new Date();
            twoYearsAgo.setFullYear(today.getFullYear() - 2);

            $("#RegistrationDate").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "@AdminGeneralHelper.DateFormatForCalendar()",
                language: "en",
                autoSize: true,
                gotoCurrent: true,
                clearBtn: true,
                showButtonPanel: true,
                closeText: 'Clear',
                onClose: function (dateText, inst) {
                    if ($(window.event.srcElement).hasClass('ui-datepicker-close')) {
                        document.getElementById(this.id).value = '';
                    }
                },
                minDate: twoYearsAgo, // Set minimum date to two years ago
                maxDate: today,       // Set maximum date to today
            });
        });
    </script>
}











