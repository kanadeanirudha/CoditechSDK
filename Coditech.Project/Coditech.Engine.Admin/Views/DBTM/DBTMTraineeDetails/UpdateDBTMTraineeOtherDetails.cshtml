@model DBTMTraineeDetailsViewModel
@{
    ViewBag.Title = "Update Trainee Other Details";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    Dictionary<string, string> keyValuePairs = new Dictionary<string, string>();
    keyValuePairs.Add("DBTMTraineeDetailId", Model.DBTMTraineeDetailId.ToString());
    keyValuePairs.Add("PersonId", Model.PersonId.ToString());
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2">
                @Html.Partial("~/Views/DBTM/DBTMTraineeDetails/_DBTMTraineeDetailsSidePannel.cshtml", keyValuePairs)
            </div>
            <div class="col-lg-10">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                <h4 class="card-title">Update Trainee Other Details- @Model.FirstName @Model.LastName</h4>
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.DBTMTraineeDetailId)
                            @Html.HiddenFor(m => m.PersonId)
                            @Html.HiddenFor(m => m.FirstName)
                            @Html.HiddenFor(m => m.LastName)
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.GroupEnumId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.GroupEnumId.ToString(),
                                   DropdownName = "GroupEnumId",
                                   GroupCode = DropdownTypeEnum.GymGroup.ToString(),
                                   IsRequired = true
                               })
                                        @Html.ValidationMessageFor(x => x.GroupEnumId)

                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SourceEnumId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.SourceEnumId.ToString(),
                                   DropdownName = "SourceEnumId",
                                   GroupCode = DropdownTypeEnum.GymSource.ToString(),
                                   IsRequired = true
                               })
                                        @Html.ValidationMessageFor(x => x.SourceEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Height, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Height, new { @class = "form-control", onkeypress = "return CoditechCommon.ValidNumeric()", @min = "1" })
                                        @Html.ValidationMessageFor(x => x.Height)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Weight, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Weight, new { @class = "form-control", onkeypress = "return CoditechCommon.ValidDecimalNumeric()", @min = "1" })
                                        @Html.ValidationMessageFor(x => x.Weight)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.MedicalHistory, new { @class = "form-label" })
                                        @Html.TextAreaFor(x => x.MedicalHistory, new { @class = "form-control", @maxlength = "500" })
                                        @Html.ValidationMessageFor(x => x.MedicalHistory)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.PastInjuries, new { @class = "form-label" })
                                        @Html.TextAreaFor(x => x.PastInjuries, new { @class = "form-control", @maxlength = "500" })
                                        @Html.ValidationMessageFor(x => x.PastInjuries)
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OtherInformation, new { @class = "form-label" })
                                        @Html.TextAreaFor(x => x.OtherInformation, new { @class = "form-control", @maxlength = "500" })
                                        @Html.ValidationMessageFor(x => x.OtherInformation)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsActive, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/DBTMTraineeDetailsCancel?SelectedCentreCode=@Model.CentreCode" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let heightInput = document.querySelector("[name='Height']");

        if (heightInput) {
            let heightValue = parseFloat(heightInput.value);

            // Check if the height is a whole number
            if (!isNaN(heightValue) && heightValue % 1 === 0) {
                heightInput.value = heightValue.toFixed(0); // Convert to integer format
            }
        }
    });
</script>
