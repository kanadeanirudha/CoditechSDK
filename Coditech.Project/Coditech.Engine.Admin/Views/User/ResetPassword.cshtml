@using Coditech.Admin.ViewModel
@model ResetPasswordViewModel
@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    ViewBag.Title = "Reset Password";
    string actionName = string.IsNullOrEmpty(Model.ResetPasswordToken) ? "ResetPasswordSendLink" : "ResetPassword";
}
<div class="card-body p-0 auth-content">
    <ul class="nav-border nav nav-pills" role="tablist">
        <li class="nav-item">
            <a class="nav-link active fw-semibold" data-bs-toggle="tab" href="/user/resetpassword" role="tab">Reset Password</a>
        </li>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane active p-3" id="LogIn_Tab" role="tabpanel">
            @using (Html.BeginForm(actionName, "User", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @if (string.IsNullOrEmpty(Model.ResetPasswordToken))
                {
                    <div class="form-group mb-2">
                        @Html.LabelFor(x => x.UserName, new { @class = "form-label" })
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", placeholder = "username..." })
                        </div>
                        @Html.ValidationMessageFor(m => m.UserName, null)
                        @Html.ValidationMessageFor(m => m.ErrorMessage, null)
                    </div>
                }
                else
                {
                    @Html.HiddenFor(x => x.ResetPasswordToken)
                    <div class="form-group mb-2">
                        @Html.LabelFor(x => x.OTP, new { @class = "form-label required" })
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.OTP, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.OTP, null)
                    </div>
                    <div class="form-group mb-2">
                        @Html.LabelFor(x => x.NewPassword, new { @class = "form-label required" })
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.NewPassword, new { @class = "form-control", type = "password" })
                        </div>
                        @Html.ValidationMessageFor(m => m.NewPassword, null)
                    </div>
                    <div class="form-group mb-2">
                        @Html.LabelFor(x => x.ConfirmPassword, new { @class = "form-label required" })
                        <div class="input-group password-input-wraper">
                            @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control password-input", type = "Password", placeholder = "Confirm Password here..." })
                            <i class="fas fa-eye view-password"></i>
                        </div>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, null)
                    </div>

                }
                <div class="form-group row my-3">
                    <div class="col-sm-6">
                        <div class="custom-control custom-switch switch-success">
                            @*  <input type="checkbox" class="custom-control-input" id="customSwitchSuccess">
                        <label class="form-label text-muted" for="customSwitchSuccess">Remember me</label> *@
                        </div>
                    </div>
                    <div class="col-sm-6 text-end">
                        <a href="/user/login" class="text-muted font-13"><i class="dripicons-lock"></i>Log in</a>
                    </div>
                </div>

                <div class="form-group mb-0 row">
                    <div class="col-12">
                        <button class="btn btn-primary w-100 waves-effect waves-light">Reset<i class="fas fa-sign-in-alt ms-1"></i></button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".view-password").click(function () {
                $(this).toggleClass("fa fa-eye-slash");
                var inputAttribute = $('.password-input');
                if (inputAttribute.attr("type") == "password") {
                    inputAttribute.attr("type", "text");
                } else {
                    inputAttribute.attr("type", "password");
                }
            });
        });
    </script>
}
