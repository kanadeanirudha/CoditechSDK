@model Coditech.Admin.ViewModel.InventoryItemModelGroupViewModel
@{
    ViewBag.Title = Model.InventoryItemModelGroupId > 0 ? "Update InventoryItemModelGroup" : "Add InventoryItemModelGroup";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
}
<!-- Page Content -->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.InventoryItemModelGroupId > 0)
                                {
                                    <h4 class="card-title">Update Inventory Item Model Group</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Inventory Item Model Group</h4>
                                }
                            </div><!-- end col -->
                        </div><!-- end row -->
                    </div><!-- end card-header -->
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(x => x.InventoryItemModelGroupId)
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ItemModelGroupName, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.ItemModelGroupName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.ItemModelGroupName)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ItemModelGroupCode, new { @class = "form-label required" })
                                        @{
                                            if (!string.IsNullOrEmpty(Model.ItemModelGroupCode))
                                            {
                                                @Html.TextBoxFor(x => x.ItemModelGroupCode, new { @class = "form-control", @readonly = "readonly" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(x => x.ItemModelGroupCode, new { @class = "form-control", @onkeypress = "return CoditechCommon.AvoidSpacing()" })
                                            }
                                        }
                                        @Html.ValidationMessageFor(x => x.ItemModelGroupCode)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.InventoryModelEnumId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.InventoryModelEnumId.ToString(),
                                   DropdownName = "InventoryModelEnumId",
                                   GroupCode = DropdownTypeEnum.InventoryModel.ToString()
                               })
                                        @Html.ValidationMessageFor(x => x.InventoryModelEnumId, null)
                                    </div>
                                </div>
                            </div>
                            <!-- Cost Method Section -->
                            <div class="row">
                                <div class="col-lg-12">
                                    <h5>Costing Method And Cost Recognition</h5>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label class="form-label">Ledger Integration</label>
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.PostPhysicalInventory, new { @class = "form-check-input", id = "PostPhysicalInventory" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="PostPhysicalInventory">Post Physical Inventory</label>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.PostFinancialInventory, new { @class = "form-check-input", id = "PostFinancialInventory" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="PostFinancialInventory">Post Financial Inventory</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label class="form-label">Cost Price</label>
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsIncludePhysicalValue, new { @class = "form-check-input", id = "IsIncludePhysicalValue" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="IsIncludePhysicalValue">Include Physical Value</label>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsFixedReceiptPrice, new { @class = "form-check-input", id = "IsFixedReceiptPrice" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="IsFixedReceiptPrice">Fixed Receipt Price</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label class="form-label">Recognition of Cost</label>
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.PostDeferredRevenueAccountOnSale, new { @class = "form-check-input", id = "PostDeferredRevenueAccountOnSale" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="PostDeferredRevenueAccountOnSale">Post Deferred Revenue Account On Sale</label>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.AccrueLiabilityOnProductReceipt, new { @class = "form-check-input", id = "AccrueLiabilityOnProductReceipt" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="AccrueLiabilityOnProductReceipt">Accrue Liability On Product Receipt</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label class="form-label">Inventory Policy</label>
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.StockedProduct, new { @class = "form-check-input", id = "StockedProduct" })
                                            <label class="form-check-label" style="padding-left: 10px;" for="StockedProduct">Stocked Product</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- End Cost Method Section -->
                            <div class="row">
                                <div class="col-lg-12">
                                    <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                                    <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                                </div>
                            </div>
                        }
                    </div><!-- end card-body -->
                </div><!-- end card -->
            </div><!-- end col-lg-12 -->
        </div><!-- end row -->
    </div><!-- end container-fluid -->
</div><!-- end page-content -->
